/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/js/";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	const React = __webpack_require__(1);
	const ReactDOM = __webpack_require__(3);
	const Rooms = __webpack_require__(2);

	ReactDOM.render(React.createElement(Rooms, null), document.getElementById('rooms'));

/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = React;

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	const React = __webpack_require__(1);

	const Rooms = React.createClass({
		displayName: 'Rooms',


		getInitialState: function () {
			return {
				connections: 0,
				rooms: {}
			};
		},

		componentDidMount: function () {
			var self = this;
			var uri = window.location.href.replace('http', 'ws');
			if (!uri.endsWith('/')) {
				uri = uri + '/';
			}
			this.client = new WebSocket(uri + '.__room_watcher__');

			this.client.onmessage = function (event) {
				self.setState(JSON.parse(event.data));
			};
		},

		componentWillUnmount: function () {
			if (this.client) {
				this.client.close();
			}
		},

		render: function () {
			var state = this.state;
			var keys = Object.keys(this.state.rooms);

			var content = null;
			if (keys.length === 0) {
				content = React.createElement(
					'div',
					{ className: 'list-group-item' },
					React.createElement(
						'em',
						null,
						'No client connected currently'
					)
				);
			} else {
				content = React.createElement(
					'div',
					null,
					keys.map(function (name) {
						return React.createElement(
							'li',
							{ key: name, className: 'list-group-item' },
							React.createElement(
								'span',
								null,
								name
							),
							React.createElement(
								'span',
								{ className: 'badge' },
								state.rooms[name]
							)
						);
					})
				);
			}

			return React.createElement(
				'div',
				{ className: 'panel panel-default' },
				React.createElement(
					'div',
					{ className: 'panel-heading' },
					React.createElement(
						'span',
						null,
						'Rooms'
					),
					React.createElement(
						'em',
						{ className: 'pull-right' },
						'Connections: ',
						state.connections,
						' / Rooms count: ',
						keys.length,
						' '
					)
				),
				React.createElement(
					'div',
					{ className: 'list-group' },
					content
				)
			);
		}
	});

	module.exports = Rooms;

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = ReactDOM;

/***/ }
/******/ ]);